---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: storage-backend-controller-role
  labels:
    provisioner: csi.huawei.com
rules:
  - apiGroups: [ "admissionregistration.k8s.io" ]
    resources: [ "validatingwebhookconfigurations" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "" ]
    resources: [ "configmaps", "secrets", "events" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "xuanwu.huawei.io" ]
    resources: [ "storagebackendclaims", "storagebackendclaims/status", "storagebackendcontents",
                 "storagebackendcontents/status" ]
    verbs: [ "create", "get", "list", "watch", "update", "delete" ]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: storage-backend-sidecar-role
  labels:
    provisioner: csi.huawei.com
rules:
  - apiGroups: [ "" ]
    resources: [ "events", "configmaps" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "xuanwu.huawei.io" ]
    resources: [ "storagebackendcontents", "storagebackendcontents/status" ]
    verbs: [ "get", "list", "watch", "update" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: storage-backend-controller-binding
  labels:
    app: xuanwu-volume-service
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
roleRef:
  kind: ClusterRole
  name: storage-backend-controller-role
  apiGroup: rbac.authorization.k8s.io

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: storage-backend-sidecar-binding
  labels:
    app: xuanwu-volume-service
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
roleRef:
  kind: ClusterRole
  name: storage-backend-sidecar-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-controller
  namespace: {{ .Values.kubernetes.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-attacher-role-cfg
  namespace: {{ .Values.kubernetes.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: huawei-csi-attacher-cfg
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-attacher-cfg
  namespace: {{ .Values.kubernetes.namespace }}
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-provisioner-role-cfg
  namespace: {{ .Values.kubernetes.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: huawei-csi-provisioner-cfg
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-provisioner-cfg
  namespace: {{ .Values.kubernetes.namespace }}
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
  - apiGroups:
      - storage.k8s.io
    resources:
      - csistoragecapacities
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-provisioner-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-provisioner-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-provisioner-runner
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - list
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - get
      - list
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-attacher-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-attacher-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-attacher-runner
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments/status
    verbs:
      - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-csi-resizer-role-cfg
  namespace: {{ .Values.kubernetes.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: huawei-csi-resizer-cfg
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-resizer-cfg
  namespace: {{ .Values.kubernetes.namespace }}
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-csi-resizer-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-resizer-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-resizer-runner
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch

{{ if .Values.controller.snapshot.enabled }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-csi-snapshotter-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-snapshotter-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-snapshotter-runner
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents/status
    verbs:
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-snapshot-controller-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-snapshot-controller-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-snapshot-controller-runner
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents/status
    verbs:
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
{{ end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-controller-runner
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-controller-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-controller-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: {{ .Values.kubernetes.namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-controller
  namespace: {{ .Values.kubernetes.namespace }}
spec:
  replicas: {{ .Values.controller.controllerCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: huawei-csi-controller
      provisioner: csi.huawei.com
  template:
    metadata:
      labels:
        app: huawei-csi-controller
        provisioner: csi.huawei.com
    spec:
      {{ if .Values.controller.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.controller.nodeSelector | nindent 8 }}
      {{ end }}
      {{ if .Values.controller.tolerations }}
      tolerations:
      {{- toYaml .Values.controller.tolerations | nindent 6 }}
      {{ end }}
      hostNetwork: true
      serviceAccount: huawei-csi-controller
      containers:
        - name: liveness-probe
          args:
            - "--csi-address=/csi/csi.sock"
            - "--health-port=9808"
          image: {{ .Values.images.sidecar.livenessProbe }}
          imagePullPolicy: {{ .Values.sidecarImagePullPolicy }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - name: csi-provisioner
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=6h"
            - "--volume-name-prefix={{ default "pvc" (.Values.controller).volumeNamePrefix }}"
            {{ if gt ( (.Values.controller).controllerCount | int ) 1 }}
            - "--leader-election"
            {{ end }}
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: {{ .Values.images.sidecar.provisioner }}
          imagePullPolicy: {{ .Values.sidecarImagePullPolicy }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        {{ if .Values.attachRequired }}
        - name: csi-attacher
          args:
            - "--csi-address=$(ADDRESS)"
            {{ if gt ( (.Values.controller).controllerCount | int ) 1 }}
            - "--leader-election"
            {{ end }}
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: {{ .Values.images.sidecar.attacher }}
          imagePullPolicy: {{ .Values.sidecarImagePullPolicy }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        {{ end }}
        {{ if .Values.controller.resizer.enabled }}
        - name: csi-resizer
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--handle-volume-inuse-error=false"
            {{ if gt ( (.Values.controller).controllerCount | int ) 1 }}
            - "--leader-election"
            {{ end }}
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: {{ .Values.images.sidecar.resizer }}
          imagePullPolicy: {{ .Values.sidecarImagePullPolicy }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        {{ end }}
        {{ if .Values.controller.snapshot.enabled }}
        - name: csi-snapshotter
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            {{ if gt ( (.Values.controller).controllerCount | int ) 1 }}
            - "--leader-election"
            {{ end }}
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: {{ .Values.images.sidecar.snapshotter }}
          imagePullPolicy: {{ .Values.sidecarImagePullPolicy }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - name: snapshot-controller
          args:
            - "--v=5"
            {{ if gt ( (.Values.controller).controllerCount | int ) 1 }}
            - "--leader-election"
            {{ end }}
          image: {{ .Values.images.sidecar.snapshotController }}
          imagePullPolicy: {{ .Values.sidecarImagePullPolicy }}
        {{ end }}
        - name: storage-backend-controller
          image: {{ required "Must provide the .Values.images.storageBackendController" .Values.images.storageBackendController }}
          imagePullPolicy: {{ .Values.huaweiImagePullPolicy }}
          env:
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          args:
            - "--logging-module={{ ((.Values.csiDriver).controllerLogging).module | default "file" }}"
            - "--log-level={{ ((.Values.csiDriver).controllerLogging).level | default "info" }}"
            - "--log-file-dir={{ ((.Values.csiDriver).controllerLogging).fileDir | default "/var/log/huawei" }}"
            - "--log-file-size={{ ((.Values.csiDriver).controllerLogging).fileSize | default "20M" }}"
            - "--max-backups={{ int ((.Values.csiDriver).controllerLogging).maxBackups | default 9 }}"
            - "--web-hook-port={{ int .Values.controller.webhookPort | default 443 }}"
            {{ if gt ( (.Values.controller).controllerCount | int ) 1 }}
            - "--enable-leader-election=true"
            {{ else }}
            - "--enable-leader-election=false"
            {{ end }}
            {{ if (.Values.leaderElection).leaseDuration }}
            - "--leader-lease-duration={{ .Values.leaderElection.leaseDuration }}"
            {{ end }}
            {{ if (.Values.leaderElection).renewDeadline }}
            - "--leader-renew-deadline={{ .Values.leaderElection.renewDeadline }}"
            {{ end }}
            {{ if (.Values.leaderElection).retryPeriod }}
            - "--leader-retry-period={{ .Values.leaderElection.retryPeriod }}"
            {{ end }}
          ports:
            - containerPort: {{ int ((.Values.volumeService).storageBackendController).webhookPort | default 443 }}
          volumeMounts:
            - mountPath: /var/log
              name: log
            - mountPath: /etc/localtime
              name: host-time
        - name: storage-backend-sidecar
          image: {{ required "Must provide the .Values.images.storageBackendSidecar" .Values.images.storageBackendSidecar }}
          imagePullPolicy: {{ .Values.huaweiImagePullPolicy }}
          env:
            - name: DRCSI_ENDPOINT
              value: {{ .Values.csiDriver.drEndpoint }}
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          args:
            - "--logging-module={{ ((.Values.csiDriver).controllerLogging).module | default "file" }}"
            - "--log-level={{ ((.Values.csiDriver).controllerLogging).level | default "info" }}"
            - "--log-file-dir={{ ((.Values.csiDriver).controllerLogging).fileDir | default "/var/log/huawei" }}"
            - "--log-file-size={{ ((.Values.csiDriver).controllerLogging).fileSize | default "20M" }}"
            - "--max-backups={{ int ((.Values.csiDriver).controllerLogging).maxBackups | default 9 }}"
            - "--dr-endpoint=$(DRCSI_ENDPOINT)"
            {{ if gt ( (.Values.controller).controllerCount | int ) 1 }}
            - "--enable-leader-election=true"
            {{ else }}
            - "--enable-leader-election=false"
            {{ end }}
            {{ if (.Values.leaderElection).leaseDuration }}
            - "--leader-lease-duration={{ .Values.leaderElection.leaseDuration }}"
            {{ end }}
            {{ if (.Values.leaderElection).renewDeadline }}
            - "--leader-renew-deadline={{ .Values.leaderElection.renewDeadline }}"
            {{ end }}
            {{ if (.Values.leaderElection).retryPeriod }}
            - "--leader-retry-period={{ .Values.leaderElection.retryPeriod }}"
            {{ end }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/log
              name: log
            - mountPath: /etc/localtime
              name: host-time
        - name: huawei-csi-driver
          image: {{ required "Must provide the CSI controller service container image." .Values.images.huaweiCSIService }}
          imagePullPolicy: {{ .Values.huaweiImagePullPolicy }}
          args:
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--dr-endpoint=$(DRCSI_ENDPOINT)"
            - "--controller"
            - "--backend-update-interval={{ .Values.csiDriver.backendUpdateInterval }}"
            - "--driver-name={{ .Values.csiDriver.driverName }}"
            - "--logging-module={{ .Values.csiDriver.controllerLogging.module }}"
            - "--log-level={{ .Values.csiDriver.controllerLogging.level }}"
            - "--volume-name-prefix={{ default "pvc" (.Values.controller).volumeNamePrefix }}"
            {{ if eq .Values.csiDriver.controllerLogging.module "file" }}
            - "--log-file-dir={{ .Values.csiDriver.controllerLogging.fileDir }}"
            - "--log-file-size={{ .Values.csiDriver.controllerLogging.fileSize }}"
            - "--max-backups={{ .Values.csiDriver.controllerLogging.maxBackups }}"
            {{ end }}
          env:
            - name: CSI_ENDPOINT
              value: {{ .Values.csiDriver.endpoint }}
            - name: DRCSI_ENDPOINT
              value: {{ .Values.csiDriver.drEndpoint }}
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 3
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/log
              name: log
      volumes:
        - emptyDir: null
          name: socket-dir
        - hostPath:
            path: /var/log/
            type: Directory
          name: log
        - hostPath:
            path: /etc/localtime
            type: File
          name: host-time

---
apiVersion: v1
kind: Service
metadata:
  name: huawei-csi-controller
  namespace: {{ .Values.kubernetes.namespace }}
  labels:
    app: huawei-csi-controller
spec:
  selector:
    app: huawei-csi-controller
  ports:
    - name: storage-backend-controller
      protocol: TCP
      port: {{ int .Values.controller.webhookPort | default 443 }}
      targetPort: {{ int .Values.controller.webhookPort | default 443 }}